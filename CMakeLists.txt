cmake_minimum_required(VERSION 3.20)

project(jolt)

option(JOLT_BUILD_SHARED_LIBS "Build Jolt as a shared lib (only works if BUILD_SHARED_LIBS is On)" OFF)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS OFF)

set(_BUILD_SHARED_LIBS ${BUILD_SHARED_LIBS})
if (NOT JOLT_BUILD_SHARED_LIBS)
	set(BUILD_SHARED_LIBS OFF)
endif()
add_subdirectory(libs/JoltPhysics/Build/)
if (NOT JOLT_BUILD_SHARED_LIBS)
	set(BUILD_SHARED_LIBS ${_BUILD_SHARED_LIBS})
endif()

set_property(TARGET Jolt PROPERTY POSITION_INDEPENDENT_CODE ON)

add_library(jolt.hdll jolt.cpp)
target_link_libraries(jolt.hdll Jolt)
set_target_properties(jolt.hdll PROPERTIES PREFIX "" OUTPUT_NAME jolt SUFFIX .hdll)

if (WIN32)
	if (BUILD_HASHLINK)
		if (NOT TARGET libhl)
			add_subdirectory(${HL_LIBS_DIR}/hashlink hashlink)
			set_property(TARGET libhl PROPERTY POSITION_INDEPENDENT_CODE ON)
		endif()
		target_link_libraries(jolt.hdll libhl)
	else()
		target_include_directories(jolt.hdll PUBLIC $ENV{HASHLINKPATH}/include)
		target_link_libraries(jolt.hdll $ENV{HASHLINKPATH}/libhl.lib)
	endif()

	set_property(TARGET jolt.hdll PROPERTY
		MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
	set_property(TARGET Jolt PROPERTY
		MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
elseif (APPLE)
	if (BUILD_HASHLINK)
		if (NOT TARGET libhl)
            add_subdirectory(${HL_LIBS_DIR}/hashlink hashlink)
            set_property(TARGET libhl PROPERTY POSITION_INDEPENDENT_CODE ON)
		endif()
		target_link_libraries(jolt.hdll libhl)
	else()
        target_include_directories(jolt.hdll PUBLIC ${HLPATH}/include)
        target_link_libraries(jolt.hdll ${HLPATH}/lib/libhl.dylib)
    endif()

	if (NOT IOS)
		find_library(APPLICATION_SERVICES_FRAMEWORK ApplicationServices REQUIRED)
		target_link_libraries(jolt.hdll ${APPLICATION_SERVICES_FRAMEWORK})
	endif()
else()
	if (BUILD_HASHLINK)
		if (NOT TARGET libhl)
			add_subdirectory(${HL_LIBS_DIR}/hashlink hashlink)
			set_property(TARGET libhl PROPERTY POSITION_INDEPENDENT_CODE ON)
		endif()
		target_link_libraries(jolt.hdll libhl)
	else()
		target_include_directories(jolt.hdll PUBLIC $ENV{HASHLINKPATH}/src)
		target_link_libraries(jolt.hdll $ENV{HASHLINKPATH}/libhl.so)
	endif()
endif()

install(TARGETS jolt.hdll DESTINATION lib)